.prose {
  --cd-color-body: #3f3f46;
  --cd-color-headings: #18181b;
  --cd-color-lead: #52525b;
  --cd-color-links: #18181b;
  --cd-color-bold: #18181b;
  --cd-color-counters: #71717a;
  --cd-color-bullets: #d4d4d8;
  --cd-color-hr: #e4e4e7;
  --cd-color-quotes: #18181b;
  --cd-color-quote-borders: #e4e4e7;
  --cd-color-captions: #71717a;
  --cd-color-code: #18181b;
  --cd-color-pre-code: rgb(238 238 238);
  --cd-color-pre-border: rgb(51, 51, 51);
  --cd-color-pre-bg: rgb(24 24 24);
  --cd-color-th-borders: #ddd;
  --cd-color-td-borders: #eee;
  --cd-color-bg-hover: rgba(0,0,0,0.035);

  --cd-color-invert-body: #d4d4d8;
  --cd-color-invert-headings: #fff;
  --cd-color-invert-lead: #a1a1aa;
  --cd-color-invert-links: #fff;
  --cd-color-invert-bold: #fff;
  --cd-color-invert-counters: #a1a1aa;
  --cd-color-invert-bullets: #52525b;
  --cd-color-invert-hr: #3f3f46;
  --cd-color-invert-quotes: #f4f4f5;
  --cd-color-invert-quote-borders: #3f3f46;
  --cd-color-invert-captions: #a1a1aa;
  --cd-color-invert-code: #fff;
  --cd-color-invert-pre-code: rgb(238 238 238);
  --cd-color-invert-pre-border: rgb(51, 51, 51);
  --cd-color-invert-pre-bg: rgb(24 24 24);
  --cd-color-invert-th-borders: #52525b;
  --cd-color-invert-td-borders: #3f3f46;
  --cd-color-invert-bg-hover: rgba(0,0,0,0.035);
}

.dark .prose {
  --cd-color-body: var(--cd-color-invert-body);
  --cd-color-headings: var(--cd-color-invert-headings);
  --cd-color-lead: var(--cd-color-invert-lead);
  --cd-color-links: var(--cd-color-invert-links);
  --cd-color-bold: var(--cd-color-invert-bold);
  --cd-color-counters: var(--cd-color-invert-counters);
  --cd-color-bullets: var(--cd-color-invert-bullets);
  --cd-color-hr: var(--cd-color-invert-hr);
  --cd-color-quotes: var(--cd-color-invert-quotes);
  --cd-color-quote-borders: var(--cd-color-invert-quote-borders);
  --cd-color-captions: var(--cd-color-invert-captions);
  --cd-color-code: var(--cd-color-invert-code);
  --cd-color-pre-code: var(--cd-color-invert-pre-code);
  --cd-color-pre-border: var(--cd-color-invert-pre-border);
  --cd-color-pre-bg: var(--cd-color-invert-pre-bg);
  --cd-color-th-borders: var(--cd-color-invert-th-borders);
  --cd-color-td-borders: var(--cd-color-invert-td-borders);
  --cd-color-bg-hover: var(--cd-color-invert-bg-hover);
}

.prose {
  font-size: 1em;
  line-height: 1.75;
  color: var(--cd-color-body);
}

.prose h1:not(:where([class~="not-prose"] *)) ,
.prose h2:not(:where([class~="not-prose"] *)) ,
.prose h3:not(:where([class~="not-prose"] *)) ,
.prose h4:not(:where([class~="not-prose"] *)) ,
.prose h5:not(:where([class~="not-prose"] *)) ,
.prose h6:not(:where([class~="not-prose"] *)) {
  font-family: var(--cd-font-serif);
}

.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--cd-color-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--cd-color-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--cd-color-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--cd-color-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--cd-color-bullets);
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--cd-color-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--cd-color-quotes);
  border-left-width: 0.25em;
  border-left-color: var(--cd-color-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--cd-color-headings);
  font-weight: 800;
  font-size: 2.2rem;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--cd-color-headings);
  font-weight: 700;
  font-size: 1.8em;
  margin-top: 1.2em;
  margin-bottom: 0.5em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--cd-color-headings);
  font-weight: 600;
  font-size: 1.4em;
  margin-top: 1.6em;
  margin-bottom: 0.4em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--cd-color-headings);
  font-weight: 600;
  font-size: 1.2em;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h5):not(:where([class~="not-prose"] *)) {
  color: var(--cd-color-headings);
  font-weight: 600;
  font-size: 1em;
  margin-top: 1em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}


.prose :where(h6):not(:where([class~="not-prose"] *)) {
  color: var(--cd-color-headings);
  font-weight: 600;
  font-size: 1em;
  margin-top: 1em;
  margin-bottom: 0.5em;
  line-height: 1.4;
}


.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--cd-color-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--cd-color-code);
  font-size: 0.98em;
  letter-spacing: -0.02em;
}
.prose :where(code):not(:where(pre code)):not(:where([class~="not-prose"] *)) {
  padding: 0.1em;
  background: var(--cd-bg-color-hover);
}

.prose :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
  border-width: 1px;
  border-color: var(--cd-color-td-borders);
}

.prose :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--cd-color-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--cd-color-headings);
  font-weight: 600;
  vertical-align: bottom;
  border-left-width: 1px;
  border-left-color: var(--cd-color-th-borders);
  /* text-transform: uppercase; */
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  border-left-width: 0;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--cd-color-td-borders);
  transition: background-color 125ms;
}
.prose :where(tbody tr:hover):not(:where([class~="not-prose"] *)) {
  background-color: var(--cd-color-bg-hover);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
  border-left-width: 1px;
  border-left-color: var(--cd-color-th-borders);
}
.prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
  border-left-width: 0;
}
.prose :where(tbody td p:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--cd-color-th-borders);
}

.prose :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.prose :where(th, td):not(:where([class~="not-prose"] *)) {
  padding: 0.5rem 1rem;
}

.prose :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose :where(.task-list .task-list):not(:where([class~="not-prose"] *)) {
  padding-left: 1em;
}

.prose :where(dl):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(dt):not(:where([class~="not-prose"] *)) {
  font-weight: bold;
}

.prose :where(dd):not(:where([class~="not-prose"] *)) {
  padding-left: 1em;
}
